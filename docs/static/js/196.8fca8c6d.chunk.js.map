{"version":3,"file":"static/js/196.8fca8c6d.chunk.js","mappings":"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","sources":["services/FileReader/index.ts","services/FileReader/CSVFileReader.ts","pages/About.tsx"],"sourcesContent":["\nexport interface FileReaderProps {\n    src: string;\n}\n\nexport default abstract class FileReader<T> {\n    public src: string = '';\n\n    constructor(props: FileReaderProps) {\n        this.src = props.src;\n    }\n\n    abstract read(): Promise<T>;\n}","import FileReader, { FileReaderProps } from \".\";\nimport * as d3 from \"d3\";\n\ninterface CSVFileReaderProps extends FileReaderProps {}\n\nexport default class CSVFileReader extends FileReader<d3.DSVRowArray<string>> {\n\n    constructor(props: CSVFileReaderProps ) {\n        super(props);\n    }\n\n    public async read(): Promise<d3.DSVRowArray<string>> {\n        return await d3.csv(this.src);\n    }\n\n}","import { Component, Fragment, ReactNode } from \"react\";\nimport { Chart } from \"components\";\nimport ReactGA from 'react-ga';\nimport { CSVFileReader, TSVFileReader } from \"services\";\n\ninterface AboutProps {\n    githablink?: string;\n}\n\nexport default class About extends Component<AboutProps, { chartData: any[] } > {\n    static defaultProps = {\n        githablink: '#'\n    }\n    private params: any = {x: \"дата\", y: 'диф'};\n\n    constructor(props: AboutProps) {\n        super(props);\n        this.state = {\n            chartData: [],\n        };\n    }\n\n    public componentDidMount(): void {\n        this.loadChartData();\n    }\n\n    /**\n     * gaEventTracker\n     */\n    public gaEventTracker(label: string): void {\n        ReactGA.event({ category: 'clicks', action: 'btnclick', label });\n    }\n\n    private loadChartData() {\n        new CSVFileReader({src: '/assets/counters.csv'}).read().then((data: any[]) => {\n            const parced = data\n                .filter((row) => row['дата'])\n                .filter((row) => row['диф'])\n                .map((row) => Object.assign(\n                    {},\n                    row,\n                    { дата: row['дата'].split('.').reverse().join('-')}\n                ));\n\n            this.setState({\n                chartData: parced,\n            });\n        });\n\n    }\n\n\n    render(): ReactNode {\n        return (\n            <div className=\"app_page app_page-about\">\n                <h1>About</h1>\n                <p>This is React application example</p>\n\n                {/* <h2>Sources</h2> */}\n                <p>You can explore the source code of this application on <a onClick={() =>this.gaEventTracker('githablink')} href={this.props.githablink} target=\"_blank\">Github</a></p>\n\n                <h2>What can you find there?</h2>\n                <ul>\n                    <li>Css variables and @media querys, sass nesting</li>\n                    <li>Grid and flex markup</li>\n                    <li>Up-to-date React functional components and obsolete class components</li>\n                    <li>Lazy React component loading, custom hooks</li>\n                    <li>Typescript usage and modern web application architecture</li>\n                </ul>\n\n                {/* <Chart\n                    data={this.state.chartData}\n                    params={this.params}\n                    /> */}\n\n            </div>\n        )\n    }\n\n}"],"names":["FileReader","_createClass","props","_classCallCheck","src","this","CSVFileReader","_FileReader","_inherits","_super","_createSuper","call","key","value","_read","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","d3","abrupt","sent","stop","apply","arguments","About","_Component","_this","params","x","y","state","chartData","loadChartData","label","ReactGA","category","action","_this2","read","then","data","parced","filter","row","map","Object","assign","дата","split","reverse","join","setState","_this3","_jsxs","className","children","_jsx","onClick","gaEventTracker","href","githablink","target","Component","defaultProps"],"sourceRoot":""}